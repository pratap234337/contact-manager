{"version":3,"sources":["context.js","components/Contact.js","components/contacts.js","components/textInputGroup.js","components/AddContact.js","components/About.js","components/layout/NotFound.js","components/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","then","_this2","name","onClick","bind","email","phone","Contacts","Fragment","map","contactInfo","components_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","defaultProps","AddContact","errors","onSubmit","preventDefault","_this$state","newContact","post","history","push","defineProperty","target","_this$state2","className","textInputGroup","About","NotFound","Test","title","userId","fetch","response","json","App","context_Provider","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffc79199.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts : state.contacts.filter(contact => contact.id !== action.payload)\n      }\n\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts : [action.payload, ...state.contacts]\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n\n async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts : res.data})\n  }\n\n  render() {\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo : false\n  };\n\n  onShowClick = (e) => {\n    this.setState({showContactInfo : false});\n  }\n\n  onDeleteClick = (id, dispatch) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(res => {\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n      })\n    }\n\n  render(){\n\n    const { contacts } = this.props;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return(\n            <div>\n              <h4>{contacts.name}\n              <i onClick={() => this.setState({showContactInfo : !this.state.showContactInfo})} >UP </i>\n              <i onClick={this.onDeleteClick.bind(this, contacts.id, dispatch)} >DEL </i></h4>\n\n              {showContactInfo ? (<ul>\n                <li>Email: {contacts.email}</li>\n                <li>Phone number: {contacts.phone}</li>\n              </ul>) : null}\n\n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\n\nimport { Consumer } from '../context';\n\nclass Contacts extends Component {\n\n  render() {\n\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value ;\n          return (\n            <React.Fragment>\n              {contacts.map(contactInfo => (\n                <Contact key={contactInfo.id}\n                  contacts={contactInfo} />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n\n  }\n\n}\n\nexport default Contacts\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n    <label>{label}</label>\n    <input\n      type={type}\n      name={name}\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}/>\n  </div>\n)\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value:PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport uuid from 'uuid';\nimport TextInputGroup from './textInputGroup'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n    //Check for errors\n    if(name === ''){\n      this.setState({error: {name: 'Name is required'}})\n    }\n    if(email === ''){\n      this.setState({error: {email: 'Name is required'}})\n    }\n    if(phone === ''){\n      this.setState({error: {phone: 'Name is required'}})\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    }\n\n    axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n      .then(res => {\n        dispatch({type: 'ADD_CONTACT', payload: res.data })\n      })\n\n      this.setState({\n      name: '',\n      email: '',\n      phone: ''\n\n    });\n\n    this.props.history.push('/');\n  }\n\n  onChange = (e) => this.setState({[e.target.name] : e.target.value});\n\n  render() {\n    const {name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"\">\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}/>\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}/>\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}/>\n\n                <input type=\"submit\"/>\n\n              </form>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n\n  }\n}\n\nexport default AddContact;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1> About Contact Manager</h1>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n\nexport default () => {\n  return (\n    <div>This page is not found</div>\n  )\n}\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: 'test',\n    userId: 'body test'\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data => this.setState({title: data.title, userId: data.userId}))\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.userId}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport AddContact from './components/AddContact';\nimport About from './components/About';\nimport NotFound from './components/layout/NotFound'\nimport Test from './components/Test'\n\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css';\n\nimport { Provider } from './context'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router >\n          <div className=\"App\">\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                  <Route exact path='/test' component={Test} />\n\n              <Route exact path='/about' component={About} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}